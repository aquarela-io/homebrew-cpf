# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Cpf < Formula
  desc "A CLI tool to validate, format and generate Brazilian CPF numbers"
  homepage "https://github.com/diegopeixoto/go-cpf-cli"
  version "1.13.0"
  license "MIT"

  depends_on "go" => :build

  on_macos do
    on_intel do
      url "https://github.com/aquarela-io/go-cpf-cli/releases/download/v1.13.0/go-cpf-cli_Darwin_x86_64.zip"
      sha256 "feadd02f5c032d8f353631b2987a5a5381a56c4313eade058fd88a4d465ab5d1"

      def install
        bin.install "cpf"
      end
    end
    on_arm do
      url "https://github.com/aquarela-io/go-cpf-cli/releases/download/v1.13.0/go-cpf-cli_Darwin_arm64.zip"
      sha256 "7f4599b9412e4f20be4da476f2d3dd61c354f6a581a4f3e8294185b69684968f"

      def install
        bin.install "cpf"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/aquarela-io/go-cpf-cli/releases/download/v1.13.0/go-cpf-cli_Linux_x86_64.tar.gz"
        sha256 "f5a2df0bc26094ffda53f63c6b7d35e6cb40f051a5fbc274db6b072b50ee2e65"

        def install
          bin.install "cpf"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/aquarela-io/go-cpf-cli/releases/download/v1.13.0/go-cpf-cli_Linux_arm64.tar.gz"
        sha256 "ca69f703c08d4765338cb4ca905abdc4e2f455d91e92bee33d47bc60041ffd4a"

        def install
          bin.install "cpf"
        end
      end
    end
  end

  def caveats
    <<~EOS
      To use cpf, you can run commands like:
        cpf validate 123.456.789-09
        cpf generate --count=5
        cpf format 12345678909
    EOS
  end

  test do
    system "#{bin}/cpf", "--version"
    output = shell_output("#{bin}/cpf generate --count=1")
    assert_match(/\d{3}\.\d{3}\.\d{3}-\d{2}/, output)
  end
end
