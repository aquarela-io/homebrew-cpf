# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Cpf < Formula
  desc "A CLI tool to validate, format and generate Brazilian CPF numbers"
  homepage "https://github.com/diegopeixoto/go-cpf-cli"
  version "1.10.0"
  license "MIT"

  depends_on "go" => :build

  on_macos do
    on_intel do
      url "https://github.com/diegopeixoto/go-cpf-cli/releases/download/v1.10.0/go-cpf-cli_Darwin_x86_64.zip"
      sha256 "66a3ce86b607d12ab85a49de1a01fd538b2edb4b27e694a28eb17e588dd0830e"

      def install
        bin.install "cpf"
      end
    end
    on_arm do
      url "https://github.com/diegopeixoto/go-cpf-cli/releases/download/v1.10.0/go-cpf-cli_Darwin_arm64.zip"
      sha256 "506b3dfd58270ba658b05046740504629f1a6ed20d32dbd30157e957328d8363"

      def install
        bin.install "cpf"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/diegopeixoto/go-cpf-cli/releases/download/v1.10.0/go-cpf-cli_Linux_x86_64.tar.gz"
        sha256 "b8913f540b5c43bc1a788d57f55cccb15ec709e364d0af3d27b5320141e11d0e"

        def install
          bin.install "cpf"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/diegopeixoto/go-cpf-cli/releases/download/v1.10.0/go-cpf-cli_Linux_arm64.tar.gz"
        sha256 "810c388dd42055f3517f96d3b8879588729733d549d7227ca296b6f153d4a8a2"

        def install
          bin.install "cpf"
        end
      end
    end
  end

  def caveats
    <<~EOS
      To use cpf, you can run commands like:
        cpf validate 123.456.789-09
        cpf generate --count=5
        cpf format 12345678909
    EOS
  end

  test do
    system "#{bin}/cpf", "--version"
    output = shell_output("#{bin}/cpf generate --count=1")
    assert_match(/\d{3}\.\d{3}\.\d{3}-\d{2}/, output)
  end
end
