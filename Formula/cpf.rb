# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Cpf < Formula
  desc "A CLI tool to validate, format and generate Brazilian CPF numbers"
  homepage "https://github.com/diegopeixoto/go-cpf-cli"
  version "1.11.0"
  license "MIT"

  depends_on "go" => :build

  on_macos do
    on_intel do
      url "https://github.com/aquarela-io/go-cpf-cli/releases/download/v1.11.0/go-cpf-cli_Darwin_x86_64.zip"
      sha256 "590ac73dcff8ec84ca419843d82e6715ec1fd8615a9846791bda7253c1e4989c"

      def install
        bin.install "cpf"
      end
    end
    on_arm do
      url "https://github.com/aquarela-io/go-cpf-cli/releases/download/v1.11.0/go-cpf-cli_Darwin_arm64.zip"
      sha256 "d250a4ae455d11d67febe4c7f8319c23e72a1c3f646de1dc847e4cf89bf5997d"

      def install
        bin.install "cpf"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/aquarela-io/go-cpf-cli/releases/download/v1.11.0/go-cpf-cli_Linux_x86_64.tar.gz"
        sha256 "922303e5997e6fad613b0b001153545b29de456e760fed735075f76c190367ad"

        def install
          bin.install "cpf"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/aquarela-io/go-cpf-cli/releases/download/v1.11.0/go-cpf-cli_Linux_arm64.tar.gz"
        sha256 "709e3513a0fb1e4d7a2b56a5588f725a05bf25a60ccc8e0a6479adb349fd24b2"

        def install
          bin.install "cpf"
        end
      end
    end
  end

  def caveats
    <<~EOS
      To use cpf, you can run commands like:
        cpf validate 123.456.789-09
        cpf generate --count=5
        cpf format 12345678909
    EOS
  end

  test do
    system "#{bin}/cpf", "--version"
    output = shell_output("#{bin}/cpf generate --count=1")
    assert_match(/\d{3}\.\d{3}\.\d{3}-\d{2}/, output)
  end
end
